name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  build_and_test:
    runs-on: ubuntu-22.04

    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 2
      matrix:
        target: [x86_64-pc-linux-gnu, x86_64-w64-mingw32, x86_64-apple-darwin]
    env:
      TARGET: ${{matrix.target}}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3
          sudo /usr/sbin/update-ccache-symlinks
          echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc
          source ~/.bashrc
        
      - name: Install Windows dependencies
        if: ${{ env.TARGET == 'x86_64-w64-mingw32' }}
        run: sudo apt-get install g++-mingw-w64-x86-64-posix
        
      - name: Install OSX dependencies
        if: ${{ env.TARGET == 'x86_64-apple-darwin' }}
        run: |
          sudo apt-get install curl bsdmainutils cmake libz-dev python3-setuptools libtinfo5 xorriso cpio
          cd depends && mkdir SDKs && cd SDKs
          wget https://archive.org/download/xcode-12.2/Xcode_12.2.xip
          git clone https://github.com/bitcoin-core/apple-sdk-tools.git
          python3 apple-sdk-tools/extract_xcode.py -f Xcode_12.2.xip | cpio -d -i
          ../../contrib/macdeploy/gen-sdk './Xcode.app'
          tar -xzf Xcode-12.2-12B45b-extracted-SDK-with-libcxx-headers.tar.gz
          rm -rf Xcode_12.2.xip

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ runner.os }}
          max-size: 2G

      - name: Build depends
        run: make -j$(nproc) -C depends HOST=${{env.TARGET}} NO_QT=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1

      - name: Build
        env:
          CONFIG_SITE: ${{github.workspace}}/depends/${{env.TARGET}}/share/config.site
          NOWARN_CXXFLAGS: -Wno-deprecated -Wno-unused-result
        run: |
          ./autogen.sh
          ./configure --enable-any-asset-fees --disable-tests
          make clean
          make -j$(nproc)

      - name: Run tests
        if: ${{ env.TARGET == 'x86_64-pc-linux-gnu' }}
        run: |
          echo "Running tests"
          ./test/functional/test_runner.py

      - name: Publish artifact - linux
        uses: actions/upload-artifact@v4
        with:
          name: sequentia-${{ env.TARGET }}
          path: |
            src/elementsd*
            src/elements-cli*
            src/elements-tx*
            src/elements-util*
            src/elements-wallet*
